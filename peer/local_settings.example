import os
import saml2

BASEDIR = os.path.abspath(os.path.dirname(__file__))

ADMINS = (
    ('John Doe', 'johndoe@example.com'),
)

PEER_BASE_URL = 'https://peer.example.com'
SAML_CONFIG = {
    # full path to the xmlsec1 binary programm
    'xmlsec_binary': '/usr/bin/xmlsec1',

    # your entity id, usually your subdomain plus the url to the metadata view
    'entityid': PEER_BASE_URL + '/saml2/metadata/',

    # directory with attribute mapping
    'attribute_map_dir': os.path.join(BASEDIR, 'pysaml2', 'attributemaps'),

    # this block states what services we provide
    'service': {
        # we are just a lonely SP
        'sp': {
            'name': 'PEER SP',
            'endpoints': {
                # url and binding to the assetion consumer service view
                # do not change the binding or service name
                'assertion_consumer_service': [
                    (PEER_BASE_URL + '/saml2/acs/', saml2.BINDING_HTTP_POST),
                ],
                # url and binding to the single logout service view
                # do not change the binding or service name
                'single_logout_service': [
                    (PEER_BASE_URL + '/saml2/ls/', saml2.BINDING_HTTP_REDIRECT),
                ],
            },

            # attributes that this project need to identify a user
            'required_attributes': ['mail'],

            # attributes that may be useful to have but not required
            'optional_attributes': ['givenName', 'sn'],

            # in this section the list of IdPs we talk to are defined
            'idp': {
                # we do not need a WAYF service since there is
                # only an IdP defined here. This IdP should be
                # present in our metadata

                # the keys of this dictionary are entity ids
                'https://idp.example.com/simplesaml/saml2/idp/metadata.php': {
                    'single_sign_on_service': {
                        saml2.BINDING_HTTP_REDIRECT: 'https://idp.example.com/simplesaml/saml2/idp/SSOService.php',
                    },
                    'single_logout_service': {
                        saml2.BINDING_HTTP_REDIRECT: 'https://idp.example.com/simplesaml/saml2/idp/SingleLogoutService.php',
                    },
                },
                'https://anotheridp.example.com/simplesaml/saml2/idp/metadata.php': {
                    'single_sign_on_service': {
                        saml2.BINDING_HTTP_REDIRECT: 'https://anotheridp.example.com/simplesaml/saml2/idp/SSOService.php',
                    },
                    'single_logout_service': {
                        saml2.BINDING_HTTP_REDIRECT: 'https://anotheridp.example.com/simplesaml/saml2/idp/SingleLogoutService.php',
                    },
                },
            },
        },
    },

    # where the remote metadata is stored
    'metadata': {
        'local': [os.path.join(BASEDIR, 'pysaml2', 'remote_metadata.xml')],
    },

    # set to 1 to output debugging information
    'debug': 0,

    # certificate
    'key_file': os.path.join(BASEDIR, '..', 'certs', 'peer.example.com.key'),  # private part
    'cert_file': os.path.join(BASEDIR, '..', 'certs', 'peer.example.com.crt'),  # public part

    # own metadata settings
    'contact_person': [
        {'given_name': 'John',
         'sur_name': 'Doe',
         'company': 'Example CO',
         'email_address': 'johndoe@example.com',
         'contact_type': 'technical'},
        {'given_name': 'Matt',
         'sur_name': 'Doe',
         'company': 'Example CO',
         'email_address': 'mattdoe@example.com',
         'contact_type': 'administrative'},
    ],
    # you can set multilanguage information here
    'organization': {
        'name': [('Ejemplo CO', 'es'), ('Example CO', 'en')],
        'display_name': [('Ejemplo', 'es'), ('Example', 'en')],
        'url': [('http://example.com/es/', 'es'), ('http://example.com', 'en')],
    },
    'valid_for': 24,  # how long is our metadata valid
}
